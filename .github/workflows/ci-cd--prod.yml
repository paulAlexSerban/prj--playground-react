name: CI/CD - PROD
on:
    workflow_dispatch:

# Sets the GITHUB_TOKEN permissions to allow deployment to GitHub Pages
permissions:
    contents: read
    pages: write
    id-token: write

env:
    NODE_VERSION: 18.17.1
    BASE_URL: ${{ secrets.PROD_BASE_URL }}

jobs:
    build-n-package:
        name: 'Build & Package'
        runs-on: ubuntu-latest
        steps:
            - name: 'ðŸ“¥ checkout repository'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: 'ðŸ”§  Setup NodeJS ${{ env.NODE_VERSION }}'
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ env.NODE_VERSION }}
                  cache: 'yarn'

            - name: 'ðŸ”§ Install dependencies'
              run: yarn install

            - name: 'Run Build'
              run: yarn run build:prod

            - name: 'Package ./apps'
              run: yarn run package

            - name: 'Upload apps artifact'
              uses: actions/upload-artifact@v3
              with:
                  name: apps-${{ github.run_number }}-${{ github.run_id }}
                  path: './package/apps/'

    deploy-prod:
        name: 'Deploy to AWS PROD env.'
        runs-on: ubuntu-latest
        needs: [build-n-package]
        steps:
            - name: 'ðŸ“¥ checkout repository'
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: 'Create package/dist'
              run: mkdir -p package/apps

            - uses: actions/download-artifact@v3
              with:
                  name: apps-${{ github.run_number }}-${{ github.run_id }}
                  path: package/apps

            - name: 'Configure AWS Credentials'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.S3_BUCKET_REGION }}

            - name: 'Deploy to bucket'
              if: steps.changed-test-files.outputs.any_changed == 'true'
              run: aws s3 sync ./package/apps/ s3://${{ secrets.S3_PROD_BUCKET }}${{ env.PROJECT_NAME }}/apps --delete

    flush-cdn-cache:
        name: 'Flush CDN Cache'
        runs-on: ubuntu-latest
        needs: [deploy-prod]
        steps:
            - name: 'Configure AWS Credentials'
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: ${{ secrets.S3_BUCKET_REGION }}

            - name: 'Invalidate  cloudfront'
              run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_PROD_DISTRIBUTION_ID }} --paths "${{ env.PROJECT_NAME }}/*"
