{"version":3,"file":"Select.js","sources":["../../../src/molecules/Select/Select.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect, KeyboardEventHandler, createRef } from 'react';\n\nimport Text from '../../atoms/Text';\n\nexport const KEY_CODES = {\n    ENTER: 13,\n    SPACE: 32,\n    DOWN_ARROW: 40,\n    ESC: 27,\n    UP_ARROW: 38,\n};\n\nexport interface SelectOption {\n    label: string;\n    value: string;\n}\n\nexport interface RenderOptionProps {\n    isSelected: boolean;\n    option: SelectOption;\n    getOptionRecommendedProps: (overrideProps?: Object) => Object;\n}\n\nexport interface SelectProps {\n    onOptionSelected?: (option: SelectOption, optionIndex: number) => void;\n    options?: SelectOption[];\n    label?: string;\n    renderOption?: (props: RenderOptionProps) => React.ReactNode;\n}\n\nconst getPreviousOptionIndex = (currentIndex: number | null, options: Array<SelectOption>) => {\n    if (currentIndex === null) {\n        return 0;\n    }\n\n    if (currentIndex === 0) {\n        return options.length - 1;\n    }\n\n    return currentIndex - 1;\n};\n\nconst getNextOptionIndex = (currentIndex: number | null, options: Array<SelectOption>) => {\n    if (currentIndex === null) {\n        return 0;\n    }\n\n    if (currentIndex === options.length - 1) {\n        return 0;\n    }\n\n    return currentIndex + 1;\n};\n\nconst Select: React.FC<SelectProps> = ({\n    options = [],\n    label = 'Please select an option ...',\n    onOptionSelected: handler,\n    renderOption,\n}) => {\n    const [isOpen, setIsOpen] = useState<boolean>(false);\n    const [selectedIndex, setSelectedIndex] = useState<null | number>(null);\n    const [highlightedIndex, setHighlightedIndex] = useState<null | number>(null);\n    const labelRef = useRef<HTMLButtonElement>(null);\n    const [optionRefs, setOptionRefs] = useState<React.RefObject<HTMLLIElement>[]>([]);\n    const [overlayTop, setOverlayTop] = useState<number>(0);\n\n    const onOptionSelected = (option: SelectOption, optionIndex: number) => {\n        if (handler) {\n            handler(option, optionIndex);\n        }\n\n        setSelectedIndex(optionIndex);\n        setIsOpen(false);\n    };\n\n    const onLabelClick = () => {\n        setIsOpen(!isOpen);\n    };\n\n    useEffect(() => {\n        setOverlayTop((labelRef.current?.offsetHeight || 0) + 10);\n    }, [labelRef.current?.offsetHeight]);\n\n    let selectedOption = null;\n\n    if (selectedIndex !== null) {\n        selectedOption = options[selectedIndex];\n    }\n\n    const highlightOption = (optionIndex: number | null) => {\n        setHighlightedIndex(optionIndex);\n    };\n\n    const onButtonKeyDown: KeyboardEventHandler = (event) => {\n        event.preventDefault();\n\n        if ([KEY_CODES.ENTER, KEY_CODES.SPACE, KEY_CODES.DOWN_ARROW].includes(event.keyCode)) {\n            setIsOpen(true);\n\n            // set focus on the list item\n            highlightOption(0);\n        }\n    };\n\n    useEffect(() => {\n        setOptionRefs(options.map((_) => createRef<HTMLLIElement>()));\n    }, [options.length]);\n\n    useEffect(() => {\n        if (highlightedIndex !== null && isOpen) {\n            const ref = optionRefs[highlightedIndex];\n\n            if (ref && ref.current) {\n                ref.current.focus();\n            }\n        }\n    }, [isOpen, highlightedIndex]);\n\n    const onOptionKeyDown: KeyboardEventHandler = (event) => {\n        if (event.keyCode === KEY_CODES.ESC) {\n            setIsOpen(false);\n\n            return;\n        }\n\n        if (event.keyCode === KEY_CODES.DOWN_ARROW) {\n            highlightOption(getNextOptionIndex(highlightedIndex, options));\n        }\n\n        if (event.keyCode === KEY_CODES.UP_ARROW) {\n            highlightOption(getPreviousOptionIndex(highlightedIndex, options));\n        }\n\n        if (event.keyCode === KEY_CODES.ENTER) {\n            onOptionSelected(options[highlightedIndex!], highlightedIndex!);\n        }\n    };\n\n    return (\n        <div className=\"select\">\n            <button\n                data-testid=\"SelectButton\"\n                onKeyDown={onButtonKeyDown}\n                aria-controls=\"select-list\"\n                aria-haspopup={true}\n                aria-expanded={isOpen ? true : undefined}\n                ref={labelRef}\n                className=\"select__label\"\n                onClick={() => onLabelClick()}\n            >\n                <Text>{selectedOption === null ? label : selectedOption.label}</Text>\n\n                <svg\n                    className={`select__caret ${isOpen ? 'select__caret--open' : 'select__caret--closed'}`}\n                    width=\"1rem\"\n                    height=\"1rem\"\n                    fill=\"none\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    viewBox=\"0 0 24 24\"\n                    stroke=\"currentColor\"\n                >\n                    <path d=\"M19 9l-7 7-7-7\" />\n                </svg>\n            </button>\n\n            {\n                <ul\n                    role=\"menu\"\n                    aria-hidden={isOpen ? undefined : false}\n                    id=\"select-list\"\n                    style={{ top: overlayTop }}\n                    className={`select__overlay ${isOpen ? 'select__overlay--open' : ''}`}\n                >\n                    {options.map((option, optionIndex) => {\n                        const isSelected = selectedIndex === optionIndex;\n                        const isHighlighted = highlightedIndex === optionIndex;\n\n                        const ref = optionRefs[optionIndex];\n\n                        const renderOptionProps = {\n                            ref,\n                            option,\n                            isSelected,\n                            getOptionRecommendedProps: (overrideProps = {}) => {\n                                return {\n                                    ref,\n                                    role: 'menuitemradio',\n                                    'aria-label': option.label,\n                                    'aria-checked': isSelected ? true : undefined,\n                                    onKeyDown: onOptionKeyDown,\n                                    tabIndex: isHighlighted ? -1 : 0,\n                                    onMouseEnter: () => highlightOption(optionIndex),\n                                    onMouseLeave: () => highlightOption(null),\n                                    className: `select__option\n                                ${isSelected ? 'select__option--selected' : ''}\n                                ${isHighlighted ? 'select__option--highlighted' : ''}\n                            `,\n                                    key: option.value,\n                                    onClick: () => onOptionSelected(option, optionIndex),\n                                    ...overrideProps,\n                                };\n                            },\n                        };\n\n                        if (renderOption) {\n                            return renderOption(renderOptionProps);\n                        }\n\n                        return (\n                            <li {...renderOptionProps.getOptionRecommendedProps()}>\n                                <Text>{option.label}</Text>\n\n                                {isSelected ? (\n                                    <svg\n                                        width=\"1rem\"\n                                        height=\"1rem\"\n                                        fill=\"none\"\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        strokeWidth={2}\n                                        viewBox=\"0 0 24 24\"\n                                        stroke=\"currentColor\"\n                                    >\n                                        <path d=\"M5 13l4 4L19 7\" />\n                                    </svg>\n                                ) : null}\n                            </li>\n                        );\n                    })}\n                </ul>\n            }\n        </div>\n    );\n};\n\nexport default Select;\n"],"names":[],"mappings":";;;AAIa,MAAA,SAAS,GAAG;AACrB,IAAA,KAAK,EAAE,EAAE;AACT,IAAA,KAAK,EAAE,EAAE;AACT,IAAA,UAAU,EAAE,EAAE;AACd,IAAA,GAAG,EAAE,EAAE;AACP,IAAA,QAAQ,EAAE,EAAE;EACd;AAoBF,MAAM,sBAAsB,GAAG,CAAC,YAA2B,EAAE,OAA4B,KAAI;IACzF,IAAI,YAAY,KAAK,IAAI,EAAE;AACvB,QAAA,OAAO,CAAC,CAAC;AACZ,KAAA;IAED,IAAI,YAAY,KAAK,CAAC,EAAE;AACpB,QAAA,OAAO,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAC7B,KAAA;IAED,OAAO,YAAY,GAAG,CAAC,CAAC;AAC5B,CAAC,CAAC;AAEF,MAAM,kBAAkB,GAAG,CAAC,YAA2B,EAAE,OAA4B,KAAI;IACrF,IAAI,YAAY,KAAK,IAAI,EAAE;AACvB,QAAA,OAAO,CAAC,CAAC;AACZ,KAAA;AAED,IAAA,IAAI,YAAY,KAAK,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACrC,QAAA,OAAO,CAAC,CAAC;AACZ,KAAA;IAED,OAAO,YAAY,GAAG,CAAC,CAAC;AAC5B,CAAC,CAAC;AAEF,MAAM,MAAM,GAA0B,CAAC,EACnC,OAAO,GAAG,EAAE,EACZ,KAAK,GAAG,6BAA6B,EACrC,gBAAgB,EAAE,OAAO,EACzB,YAAY,GACf,KAAI;IACD,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,GAAG,QAAQ,CAAU,KAAK,CAAC,CAAC;IACrD,MAAM,CAAC,aAAa,EAAE,gBAAgB,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;IACxE,MAAM,CAAC,gBAAgB,EAAE,mBAAmB,CAAC,GAAG,QAAQ,CAAgB,IAAI,CAAC,CAAC;AAC9E,IAAA,MAAM,QAAQ,GAAG,MAAM,CAAoB,IAAI,CAAC,CAAC;IACjD,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAmC,EAAE,CAAC,CAAC;IACnF,MAAM,CAAC,UAAU,EAAE,aAAa,CAAC,GAAG,QAAQ,CAAS,CAAC,CAAC,CAAC;AAExD,IAAA,MAAM,gBAAgB,GAAG,CAAC,MAAoB,EAAE,WAAmB,KAAI;AACnE,QAAA,IAAI,OAAO,EAAE;AACT,YAAA,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;AAChC,SAAA;QAED,gBAAgB,CAAC,WAAW,CAAC,CAAC;QAC9B,SAAS,CAAC,KAAK,CAAC,CAAC;AACrB,KAAC,CAAC;IAEF,MAAM,YAAY,GAAG,MAAK;AACtB,QAAA,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC;AACvB,KAAC,CAAC;IAEF,SAAS,CAAC,MAAK;AACX,QAAA,aAAa,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;KAC7D,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC,CAAC;IAErC,IAAI,cAAc,GAAG,IAAI,CAAC;IAE1B,IAAI,aAAa,KAAK,IAAI,EAAE;AACxB,QAAA,cAAc,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AAC3C,KAAA;AAED,IAAA,MAAM,eAAe,GAAG,CAAC,WAA0B,KAAI;QACnD,mBAAmB,CAAC,WAAW,CAAC,CAAC;AACrC,KAAC,CAAC;AAEF,IAAA,MAAM,eAAe,GAAyB,CAAC,KAAK,KAAI;QACpD,KAAK,CAAC,cAAc,EAAE,CAAC;QAEvB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE;YAClF,SAAS,CAAC,IAAI,CAAC,CAAC;;YAGhB,eAAe,CAAC,CAAC,CAAC,CAAC;AACtB,SAAA;AACL,KAAC,CAAC;IAEF,SAAS,CAAC,MAAK;AACX,QAAA,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,SAAS,EAAiB,CAAC,CAAC,CAAC;AAClE,KAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC;IAErB,SAAS,CAAC,MAAK;AACX,QAAA,IAAI,gBAAgB,KAAK,IAAI,IAAI,MAAM,EAAE;AACrC,YAAA,MAAM,GAAG,GAAG,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAEzC,YAAA,IAAI,GAAG,IAAI,GAAG,CAAC,OAAO,EAAE;AACpB,gBAAA,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;AACvB,aAAA;AACJ,SAAA;AACL,KAAC,EAAE,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC,CAAC;AAE/B,IAAA,MAAM,eAAe,GAAyB,CAAC,KAAK,KAAI;AACpD,QAAA,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,GAAG,EAAE;YACjC,SAAS,CAAC,KAAK,CAAC,CAAC;YAEjB,OAAO;AACV,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,UAAU,EAAE;YACxC,eAAe,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC;AAClE,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,QAAQ,EAAE;YACtC,eAAe,CAAC,sBAAsB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC,CAAC;AACtE,SAAA;AAED,QAAA,IAAI,KAAK,CAAC,OAAO,KAAK,SAAS,CAAC,KAAK,EAAE;YACnC,gBAAgB,CAAC,OAAO,CAAC,gBAAiB,CAAC,EAAE,gBAAiB,CAAC,CAAC;AACnE,SAAA;AACL,KAAC,CAAC;AAEF,IAAA,QACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAK,SAAS,EAAC,QAAQ,EAAA;AACnB,QAAA,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,EAAA,aAAA,EACgB,cAAc,EAC1B,SAAS,EAAE,eAAe,EACZ,eAAA,EAAA,aAAa,EACZ,eAAA,EAAA,IAAI,mBACJ,MAAM,GAAG,IAAI,GAAG,SAAS,EACxC,GAAG,EAAE,QAAQ,EACb,SAAS,EAAC,eAAe,EACzB,OAAO,EAAE,MAAM,YAAY,EAAE,EAAA;AAE7B,YAAA,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,IAAA,EAAE,cAAc,KAAK,IAAI,GAAG,KAAK,GAAG,cAAc,CAAC,KAAK,CAAQ;YAErE,KACI,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,SAAS,EAAE,CAAiB,cAAA,EAAA,MAAM,GAAG,qBAAqB,GAAG,uBAAuB,CAAA,CAAE,EACtF,KAAK,EAAC,MAAM,EACZ,MAAM,EAAC,MAAM,EACb,IAAI,EAAC,MAAM,EACX,aAAa,EAAC,OAAO,EACrB,cAAc,EAAC,OAAO,EACtB,WAAW,EAAE,CAAC,EACd,OAAO,EAAC,WAAW,EACnB,MAAM,EAAC,cAAc,EAAA;AAErB,gBAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAM,CAAC,EAAC,gBAAgB,EAAA,CAAG,CACzB,CACD;QAGL,KACI,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,IAAI,EAAC,MAAM,EAAA,aAAA,EACE,MAAM,GAAG,SAAS,GAAG,KAAK,EACvC,EAAE,EAAC,aAAa,EAChB,KAAK,EAAE,EAAE,GAAG,EAAE,UAAU,EAAE,EAC1B,SAAS,EAAE,CAAmB,gBAAA,EAAA,MAAM,GAAG,uBAAuB,GAAG,EAAE,CAAE,CAAA,EAAA,EAEpE,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,WAAW,KAAI;AACjC,YAAA,MAAM,UAAU,GAAG,aAAa,KAAK,WAAW,CAAC;AACjD,YAAA,MAAM,aAAa,GAAG,gBAAgB,KAAK,WAAW,CAAC;AAEvD,YAAA,MAAM,GAAG,GAAG,UAAU,CAAC,WAAW,CAAC,CAAC;AAEpC,YAAA,MAAM,iBAAiB,GAAG;gBACtB,GAAG;gBACH,MAAM;gBACN,UAAU;AACV,gBAAA,yBAAyB,EAAE,CAAC,aAAa,GAAG,EAAE,KAAI;oBAC9C,OAAO;wBACH,GAAG;AACH,wBAAA,IAAI,EAAE,eAAe;wBACrB,YAAY,EAAE,MAAM,CAAC,KAAK;wBAC1B,cAAc,EAAE,UAAU,GAAG,IAAI,GAAG,SAAS;AAC7C,wBAAA,SAAS,EAAE,eAAe;wBAC1B,QAAQ,EAAE,aAAa,GAAG,CAAC,CAAC,GAAG,CAAC;AAChC,wBAAA,YAAY,EAAE,MAAM,eAAe,CAAC,WAAW,CAAC;AAChD,wBAAA,YAAY,EAAE,MAAM,eAAe,CAAC,IAAI,CAAC;AACzC,wBAAA,SAAS,EAAE,CAAA;AACb,gCAAA,EAAA,UAAU,GAAG,0BAA0B,GAAG,EAAE,CAAA;AAC5C,gCAAA,EAAA,aAAa,GAAG,6BAA6B,GAAG,EAAE,CAAA;AACvD,4BAAA,CAAA;wBACO,GAAG,EAAE,MAAM,CAAC,KAAK;wBACjB,OAAO,EAAE,MAAM,gBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC;AACpD,wBAAA,GAAG,aAAa;qBACnB,CAAC;iBACL;aACJ,CAAC;AAEF,YAAA,IAAI,YAAY,EAAE;AACd,gBAAA,OAAO,YAAY,CAAC,iBAAiB,CAAC,CAAC;AAC1C,aAAA;AAED,YAAA,QACI,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,EAAA,GAAQ,iBAAiB,CAAC,yBAAyB,EAAE,EAAA;AACjD,gBAAA,KAAA,CAAA,aAAA,CAAC,IAAI,EAAA,IAAA,EAAE,MAAM,CAAC,KAAK,CAAQ;AAE1B,gBAAA,UAAU,IACP,6BACI,KAAK,EAAC,MAAM,EACZ,MAAM,EAAC,MAAM,EACb,IAAI,EAAC,MAAM,EACX,aAAa,EAAC,OAAO,EACrB,cAAc,EAAC,OAAO,EACtB,WAAW,EAAE,CAAC,EACd,OAAO,EAAC,WAAW,EACnB,MAAM,EAAC,cAAc,EAAA;AAErB,oBAAA,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,EAAM,CAAC,EAAC,gBAAgB,EAAA,CAAG,CACzB,IACN,IAAI,CACP,EACP;AACN,SAAC,CAAC,CACD,CAEP,EACR;AACN;;;;"}